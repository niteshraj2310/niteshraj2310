name: Update Requirements

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs every Sunday at midnight
  workflow_dispatch:

jobs:
  update-requirements:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Update outdated packages
        run: |
          outdated=$(pip list --outdated --format=json | jq -r '.[].name')
          if [ -n "$outdated" ]; then
            echo "$outdated" | xargs -n1 pip install -U
            pip freeze > requirements.txt
          fi

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet requirements.txt; then
            echo "No changes detected in requirements.txt"
            echo "no_changes=true" >> $GITHUB_ENV
          else
            echo "Changes detected in requirements.txt"
            echo "no_changes=false" >> $GITHUB_ENV
          fi

      - name: Set up Git
        if: steps.check_changes.outputs.no_changes == 'false'
        run: |
          git config --global user.name 'niteshraj2310'
          git config --global user.email 'niteshraj2310@users.noreply.github.com'

      - name: Commit updated requirements.txt
        if: steps.check_changes.outputs.no_changes == 'false'
        env:
          SIGNED_OFF_BY: "Signed-off-by: niteshraj2310 <niteshraj2310@users.noreply.github.com>"
          CO_AUTHORED_BY: "Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          COMMIT_MESSAGE: "Update requirements.txt dependencies"
        run: |
          git add requirements.txt
          echo -e "$COMMIT_MESSAGE\n\n$CO_AUTHORED_BY\n$SIGNED_OFF_BY" | git commit -F -

      - name: Push changes
        if: steps.check_changes.outputs.no_changes == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin HEAD